# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  boot.initrd.luks.devices."luks-08f4c67d-08a1-4d6c-85b2-79bd4085838b".device = "/dev/disk/by-uuid/08f4c67d-08a1-4d6c-85b2-79bd4085838b";

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/cbda4117-a0fa-44d1-84cd-924f218fe5f8";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-b22a848f-15de-4645-8237-82e8382c558f".device = "/dev/disk/by-uuid/b22a848f-15de-4645-8237-82e8382c558f";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/A6E1-A7D3";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/136398cd-e3f6-4526-9608-8a77fe637abe"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp59s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Enable bluetooth
  hardware.bluetooth.enable = true;
  services.blueman.enable = true;

  virtualisation.docker.enable = true;
  virtualisation.libvirtd.enable = true;
}